name: Build WebGL and Deploy

on:
  push:
    branches: [ master ]
    paths:
      - "OvergodIdle/**"
      - ".github/workflows/build-webgl.yml"

permissions:
  contents: write

env:
  PROJECT_PATH: OvergodIdle
  TARGET_PLATFORM: WebGL
  UNITY_VERSION: 6000.1.15f1
  CACHE_EDITOR: "true"

jobs:
  buildWebGL:
    name: Build WebGL
    # runs-on: ubuntu-latest
    runs-on: [self-hosted, Linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: true

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: >
            Library-${{ runner.os }}-${{ env.UNITY_VERSION }}-${{ env.TARGET_PLATFORM }}-
            ${{
              hashFiles(
                format('{0}/Packages/manifest.json', env.PROJECT_PATH),
                format('{0}/ProjectSettings/ProjectVersion.txt', env.PROJECT_PATH)
              )
            }}
          restore-keys: |
            Library-${{ runner.os }}-${{ env.UNITY_VERSION }}-${{ env.TARGET_PLATFORM }}-
            Library-${{ runner.os }}-${{ env.UNITY_VERSION }}-
            Library-${{ runner.os }}-

      - name: Build (Unity Builder)
        uses: game-ci/unity-builder@v4
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          targetPlatform: ${{ env.TARGET_PLATFORM }}
          unityVersion: ${{ env.UNITY_VERSION }}
          runAsHostUser: true # remove this when switching to ubuntu-latest
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}

      - name: Upload WebGL artifact
        uses: actions/upload-artifact@v4
        with:
          name: WebGLBuild
          path: build/${{ env.TARGET_PLATFORM }}

  deployToPages:
    needs: buildWebGL
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: WebGLBuild
          path: build/WebGL

      - name: Inspect downloaded build
        run: |
          echo "Listing build dir..."
          ls -la build || true
          echo "Listing build/WebGL..."
          ls -la build/WebGL || true
          echo "Recursive list..."
          ls -R build | cat || true

      - name: Detect publish directory
        id: detect
        shell: bash
        run: |
          set -e
          INDEX_PATH=$(find build -type f -name index.html | head -n 1 || true)
          if [ -z "$INDEX_PATH" ]; then
            echo "No index.html found under build/." >&2
            exit 1
          fi
          PUB_DIR=$(dirname "$INDEX_PATH")
          echo "Found index.html at: $INDEX_PATH"
          echo "Publish dir: $PUB_DIR"
          echo "PUBLISH_DIR=$PUB_DIR" >> $GITHUB_ENV

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.PUBLISH_DIR }}
